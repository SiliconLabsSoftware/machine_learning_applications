name: Ubuntu env 
on: [push]

permissions:
  id-token: write
  contents: read

jobs:
  prepare-sdk-and-tools:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare folders
        run:  |
          set -e
          mkdir -p src/gsdk/extension

      - name: Checkout Simplicity SDK
        uses: actions/checkout@v5
        with:
          repository: SiliconLabs/simplicity_sdk         
          ref: v2025.6.2                                 
          path: src/gsdk
          submodules: recursive
      
      - name: Checkout machine_learning_applications (this repo)
        uses: actions/checkout@v5
        with:
          path: src/gsdk/extension/machine_learning_applications

      - name: Checkout AI/ML extension
        uses: actions/checkout@v5
        with:
          repository: SiliconLabsSoftware/aiml-extension 
          ref: v2.1.2
          path: src/gsdk/extension/aiml-extension
          submodules: recursive
          lfs: true

      - name: Download ARM-GNU and SLC toolchain  
        run: |
          mkdir -p tools && cd tools
          wget -q https://developer.arm.com/-/media/Files/downloads/gnu/12.2.rel1/binrel/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi.tar.xz
          tar -xf arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi.tar.xz
          mv arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi armgnu
          rm arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi.tar.xz
          wget -q https://www.silabs.com/documents/public/software/slc_cli_linux.zip
          unzip -q slc_cli_linux.zip -d slc_cli
          rm slc_cli_linux.zip

      - name: Upload prepared sources
        uses: actions/upload-artifact@v5
        with:
          name: gsdk-and-tools
          path: |
            src/
            tools/
          include-hidden-files: true

  build-ml:
    runs-on: ubuntu-latest
    needs: prepare-sdk-and-tools
    strategy:
      fail-fast: false
      matrix:
        board: [brd2601b]
        app:
          - imu/ble_magic_wand/ble_magic_wand
          - imu/imu_anomaly_detection/imu_anomaly_detection
          - vision/people_flow_counter_mlx90640/people_flow_counter_mlx90640
          - voice/sensory_wakeupword/app/sensory_wakeupword_series_1
          - voice/sensory_wakeupword/app/sensory_wakeupword_series_2

    steps:
      - name: Download prepared sources
        uses: actions/download-artifact@v4
        with:
          name: gsdk-and-tools
          path: .

      - name: Configure SLC,ARM-GNU, JAVA paths and  trust sdk's
        run: |
          echo "ARM_GCC_DIR=~/tools/armgnu"                  >> "$GITHUB_ENV"
          echo "~/tools/armgnu/bin/"                         >> "$GITHUB_PATH"
          
          SLC_DIR="~/tools/slc_cli/slc_cli/bin/slc-cli"
          chmod +x "$SLC_DIR/slc-cli"
          ln -sf "$SLC_DIR/slc-cli" "$SLC_DIR/slc"
          echo "UC_CLI_DIR=$SLC_DIR"                         >> "$GITHUB_ENV"
          echo "$SLC_DIR"                                    >> "$GITHUB_PATH"

          echo "SLC_JAVA_HOME=$JAVA_HOME"                    >> "$GITHUB_ENV"

          slc configuration --sdk "~/src/gsdk"
          slc signature trust --sdk     "~/src/gsdk"
          slc signature trust --extension-path "~/src/gsdk/extension/aiml-extension"
          slc signature trust --extension-path "~/src/gsdk/extension/machine_learning_applications"

      - name: Generate + Build
        working-directory: ~/src/gsdk/extension/machine_learning_applications/application
        run: |
          set -e
          slc generate -d target/${{ matrix.app }}/${{ matrix.board }} -p ${{ matrix.app }}.slcp --with ${{ matrix.board }} -s "~/src/gsdk"
          cmake --preset project -S target/${{ matrix.app }}/${{ matrix.board }}/${{ matrix.app }##*/}_cmake
          cmake --build target/${{ matrix.app }}/${{ matrix.board }}/{{ matrix.app }##*/}_cmake/build --parallel

      - name: Upload artifacts (.s37)
        uses: actions/upload-artifact@v5
        with:
          name: ${{ matrix.board }}-${{ matrix.app##*/ }}
          path: |
            ~/src/gsdk/extension/machine_learning_applications/application/target/${{ matrix.app }}/${{ matrix.board }}/**/*.s37
          if-no-files-found: warn
